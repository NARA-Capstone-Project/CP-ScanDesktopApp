
import java.awt.HeadlessException;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.time.LocalDate;
import java.util.ArrayList;
import java.util.Date;
import java.util.Properties;
import javax.mail.Message;
import javax.mail.Session;
import javax.mail.Transport;
import javax.mail.internet.InternetAddress;
import javax.mail.internet.MimeMessage;
import javax.swing.JOptionPane;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Valerie
 */
public class ShowApproveAccountInfo extends javax.swing.JFrame {

    /**
     * Creates new form ShowApproveAccountInfo
     */
    public ShowApproveAccountInfo() {
        initComponents();
        try{
          Class.forName("com.mysql.jdbc.Driver");
          Connection con=DriverManager.getConnection("jdbc:mysql://localhost:3306/cict_database","root","");
          Statement st = con.createStatement();
          ResultSet rs = st.executeQuery("select id, username, aes_decrypt(password, 'cictpassword') as password, date_request, request from `request_account` where `id` = '"+Accounts.id+"';");
          
          while(rs.next()){
              empid.setText(rs.getString("id"));
              username.setText(rs.getString("username"));
              emppass.setText(rs.getString("password"));
              daterequest.setText(rs.getString("date_request"));
              requesttype.setText(rs.getString("request"));
          }
          
        }catch(ClassNotFoundException | SQLException ex){
            System.out.println(ex);
        }
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        empid = new javax.swing.JTextField();
        username = new javax.swing.JTextField();
        daterequest = new javax.swing.JTextField();
        requesttype = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        emppass = new javax.swing.JPasswordField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(255, 193, 7));

        empid.setEditable(false);
        empid.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        empid.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        username.setEditable(false);
        username.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        username.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        daterequest.setEditable(false);
        daterequest.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        daterequest.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        requesttype.setEditable(false);
        requesttype.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        requesttype.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        jLabel14.setFont(new java.awt.Font("Century Gothic", 1, 24)); // NOI18N
        jLabel14.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pngs/icons8_customer_32px_1.png"))); // NOI18N
        jLabel14.setText("Approve Request");
        jLabel14.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel14MouseClicked(evt);
            }
        });

        jLabel15.setFont(new java.awt.Font("Century Gothic", 1, 24)); // NOI18N
        jLabel15.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel15.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pngs/icons8_Multiply_32px.png"))); // NOI18N
        jLabel15.setText("Delete Request");
        jLabel15.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel15MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(38, 38, 38)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel14, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel15, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(83, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(requesttype, javax.swing.GroupLayout.DEFAULT_SIZE, 160, Short.MAX_VALUE)
                    .addComponent(daterequest, javax.swing.GroupLayout.DEFAULT_SIZE, 160, Short.MAX_VALUE)
                    .addComponent(username, javax.swing.GroupLayout.DEFAULT_SIZE, 160, Short.MAX_VALUE)
                    .addComponent(empid, javax.swing.GroupLayout.DEFAULT_SIZE, 160, Short.MAX_VALUE)
                    .addComponent(emppass))
                .addGap(80, 80, 80))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(53, 53, 53)
                .addComponent(empid, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(username, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(emppass, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(daterequest, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(requesttype, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel14)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel15)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    static String phonenum;
    private void jLabel14MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel14MouseClicked
        // TODO add your handling code here:
        ArrayList <String>employeeid = new ArrayList<>();
        ArrayList <String>number = new ArrayList();
        
        int x=0;
        try{
          Class.forName("com.mysql.jdbc.Driver");
          Connection con=DriverManager.getConnection("jdbc:mysql://localhost:3306/cict_database","root","");
          Statement st = con.createStatement();
          ResultSet rs = st.executeQuery("select * from users");
          while(rs.next()){
              
              employeeid.add(rs.getString("user_id"));
              number.add(rs.getString("phone"));
              if(employeeid.contains(empid.getText())){
                phonenum = number.get(x);
              }else{
                  x++;
              }
          }
          
          if(employeeid.contains(empid.getText())){
              
              LocalDate futureDate = LocalDate.now().plusMonths(5);
              LocalDate now = LocalDate.now();
             st.executeUpdate("INSERT INTO `accounts`(`user_id`, `username`, `password`, `date_created`, `date_expire`, `acc_status`) VALUES ('"+empid.getText()+"','"+username.getText()+"','"+emppass.getText()+"','"+daterequest.getText()+"','"+futureDate+"','Active')");
             st.executeUpdate("INSERT INTO `account_history`(`account_id`, `action_taken`, `date_requested`, `date_approved`, `done_by`) VALUES ('"+empid.getText()+"','Added account to database','"+daterequest.getText()+"','"+now+"','"+LogIn.name+"')");
             st.executeUpdate("DELETE FROM `request_account` where `id` = '"+empid.getText()+"'");
            Accounts acc = new Accounts(this,true);
            acc.setVisible(true); 
            //SMS();
             
          }else{
              JOptionPane.showMessageDialog(this, "Account ID doesnt exist in users database.");
          }
        }catch(Exception ex){
            JOptionPane.showMessageDialog(this, ex);
        }
        
    }//GEN-LAST:event_jLabel14MouseClicked

    public void SMS(){
        String phone = phonenum;
            try{
                String host = "smtp.gmail.com";
                String user = "thesis.messenger@gmail.com";
                String pass = "cictSMS Sender";
                String to = phone+ "@txtlocal.co.uk";
                String from = user;
                String subj = "CP-Scan";
                String body = "Your account is approved by "+LogIn.name+"! Account id: "+empid.getText();
                boolean sessionDebug = false;
                Properties pros = System.getProperties();
                pros.put("mail.smtp.starttls.enable", "true");
                pros.put("mail.smtp.host", "host");
                pros.put("mail.smtp.sauth", "true");
                pros.put("mail.smtp.port", "587");
                pros.put("mail.smtp.starttls.required", "true");
                java.security.Security.addProvider(new com.sun.net.ssl.internal.ssl.Provider());
                Session mailSession = Session.getDefaultInstance(pros, null);
                mailSession.setDebug(sessionDebug);
                Message msg = new MimeMessage(mailSession);
                msg.setFrom(new InternetAddress(from));
                InternetAddress[] address = {new InternetAddress(to)};
                msg.setRecipients(Message.RecipientType.TO, address);
                msg.setSubject(subj);
                msg.setSentDate(new Date());
                msg.setText(body);
                Transport trans = mailSession.getTransport("smtp");
                trans.connect(host,user,pass);
                trans.sendMessage(msg, msg.getAllRecipients());
                trans.close();
                JOptionPane.showMessageDialog(null, "Success!");
            }catch(Exception e){
             JOptionPane.showMessageDialog(null, "Not Success!");
               System.out.println(e);
            }
    }
    private void jLabel15MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel15MouseClicked
        // TODO add your handling code here:
        LocalDate now = LocalDate.now();
        try{
          Class.forName("com.mysql.jdbc.Driver");
          Connection con=DriverManager.getConnection("jdbc:mysql://localhost:3306/cict_database","root","");
          Statement st = con.createStatement();
          st.executeUpdate("delete from `request_account` where `id` = '"+empid.getText()+"';");
          st.executeUpdate("INSERT INTO `account_history`(`account_id`, `action_taken`, `date_requested`, `done_by`) VALUES ('"+empid.getText()+"','Deleted account request','"+daterequest.getText()+"','"+LogIn.name+"')");
             
          JOptionPane.showMessageDialog(this, "Request Deleted..");
          this.dispose();
          Accounts acc = new Accounts(this,true);
          acc.setVisible(true);
        }catch(HeadlessException | ClassNotFoundException | SQLException ex){
            JOptionPane.showMessageDialog(this, ex);
        }
    }//GEN-LAST:event_jLabel15MouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ShowApproveAccountInfo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            //java.util.loggingempusername.getLogger(ShowApproveAccountInfo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ShowApproveAccountInfo().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField daterequest;
    private javax.swing.JTextField empid;
    private javax.swing.JPasswordField emppass;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JTextField requesttype;
    private javax.swing.JTextField username;
    // End of variables declaration//GEN-END:variables
}
